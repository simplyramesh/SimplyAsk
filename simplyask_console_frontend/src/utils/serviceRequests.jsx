import colors from '../config/colors';

export const serviceCodes = {
  BUILDING_INSPECTION_REQUEST: '001',
  ELECTRICAL_INSPECTION_REQUEST: '002',
  PLUMBING_INSPECTION_REQUSET: '003',
  NOISE_COMPLAINT_REQUEST: '004',
  STREET_LIGHT_REQUEST: '005',
  ABANDONED_VEHICLE_REQUEST: '006',
  DEAD_ANIMAL_REMOVAL: '007',
  POTHOLE_REPAIER: '008',
  SNOW_REMOVAL: '009',
};

export const servicesNames = {
  BUILDING_INSPECTION_REQUEST: 'Building Inspection',
  ELECTRICAL_INSPECTION_REQUEST: 'Electrical Inspection',
  PLUMBING_INSPECTION_REQUSET: 'Plumbing Inspection',
  NOISE_COMPLAINT_REQUEST: 'Noise Complaint',
  STREET_LIGHT_REQUEST: 'Fix Street Light',
  ABANDONED_VEHICLE_REQUEST: 'Remove Abandoned Vehicle',
  DEAD_ANIMAL_REMOVAL: 'Dead Animal Removal',
  POTHOLE_REPAIER: 'Pothole Repair',
  SNOW_REMOVAL: 'Snow Removal',
  DASHBOARD: 'DASHBOARD',
};

export const statuses = {
  ASSIGNED: 'Assigned',
  OVERDUE: 'Overdue',
  RESOLVED: 'Resolved',
  UNASSIGNED: 'Unassigned',
};

export const ticketType = {
  UNRESOLVED: 'Unresolved',
  RESOLVED: 'Resolved',
};

export const fieldKeys = {
  ADDRESS: 'addressInformation.address',
  LATITUDE: 'addressInformation.lat',
  LONGITUDE: 'addressInformation.longitude',
  ZIPCODE: 'addressInformation.zipcode',
  AGENT_ID: 'assignedAgent.agent_id',
  AGENT_NAME: 'assignedAgent.agent_name',
  FALLOUT_AGENT_ID: 'assignedAgent.agentId',
  FALLOUT_AGENT_NAME: 'assignedAgent.agentName',
  ASSIGNED_BY: 'assignedAgent.assignedBy',
  ACCESS_CODE: 'attribute.access_code',
  ITEM: 'attribute.item',
  PERMIT_NUMBER: 'attribute.permit_number',
  EMAIL: 'contactInformation.email',
  FIRST_NAME: 'contactInformation.first_name',
  LAST_NAME: 'contactInformation.last_name',
  PHONE_NUMBER: 'contactInformation.phone_number',
  MEDIA_URL: 'mediaUrl',
  AGENCY_RESPONSIBLE: 'serviceInformation.agency_responsible',
  AGENT_SUBSCRIBE: 'serviceInformation.agent_subscribe',
  CLIENT_NOTICE: 'serviceInformation.client_notice',
  DESCRIPTION: 'serviceInformation.description',
  EXPECTED_DATE_TIME: 'serviceInformation.expected_date_time',
  PROJECT_NAME: 'projectName',
  INCIDENT_ID: 'incidentId',
  INCIDENT_TIME: 'incidentTimestamp',
  INCIDENT_MESSAGE: 'incidentMessage',
  INCIDENT_TYPE: 'incidentType',
  INCIDENT_ASSIGNED_BY: 'assignedAgent.assignedBy',
  INCIDENT_PROCESS_DEF_ID: 'procDefId',
  ACTIVITY_ID: 'failedActivityId',
  ASSIGNED_TO: 'assignedAgent.agentName',
  STATUS_PROJECT: 'status',
  REQUESTED_DATE_TIME: 'serviceInformation.requested_date_time',
  SERVICE_CODE: 'serviceInformation.service_code',
  SERVICE_NAME: 'serviceInformation.service_name',
  SERVICE_NOTICE: 'serviceInformation.service_notice',
  STATUS: 'serviceInformation.status',
  UPDATED_DATE_TIME: 'serviceInformation.updated_date_time',
  PROCESS_ID: 'processId',
  SESSION_ID: 'serviceInformation.session_id',
  SERVICE_REQUEST_ID: 'service_request_id',
  ID: 'id',
  STATUS_NOTES: 'statusNotes',
  TRACK_NUMBER: 'trackNumber',
  REQUESTED_BY_NAME: 'requestedBy.name',
};

// TODO: remove this once all the requests have the session id prop
export const conversation = [
  {
    firstName: 'Agent',
    lastName: '',
    message: 'Hello, Thank you for contacting the City of Vancouver. How may I help you?',
    timestamp: new Date(),
  },
  {
    firstName: 'James',
    lastName: 'Bond',
    message: 'Hi there, I need to place a request for a pothole to be repaired. Thanks!',
    timestamp: new Date(),
    color: colors.secondary,
  },
  {
    firstName: 'Agent',
    lastName: '',
    message: 'Can you please tell me the address of the pothole?',
    timestamp: new Date(),
  },
  {
    firstName: 'James',
    lastName: 'Bond',
    message: 'Its near 4567 Hazel Street in Burnaby BC blocking the left lane.',
    timestamp: new Date(),
    color: colors.secondary,
  },
  {
    firstName: 'Agent',
    lastName: '',
    message: 'I will transfer you to the next available employee. Please hold.',
    timestamp: new Date(),
  },
];

export const processHistoryKeys = {
  INCIDENT_ID: 'incidentId',
  INCIDENT_MSG: 'incidentMsg',
  INCIDENT_TYPE: 'incidentType',
  START_TIME: 'startTime',
  END_TIME: 'endTime',
  CURRENT_TASK: 'currentTask',
  CURRENT_TASK_ONLY: 'currentTask',
  PROJECT_NAME: 'projectName',
  PROCESS_ID: 'procInstanceId',
  STATUS_ONLY: 'status',
  STATUS: 'status',
  STATUS_BULK_TABLE: 'bulkExecutionFileDetails.status',
  SUCCESS: 'SUCCESS',
  RESOLVED: 'RESOLVED',
  FAILED: 'FAILED',
  PREPARING: 'PREPARING',
  EXECUTING: 'EXECUTING',
  ALL: 'All',
  SOURCE: 'source',
  INPUT_DATA: 'executionData',
  EXECUTION_GROUP: 'group',
  HEADER_DATA: 'headerData',
  FILE_ID: 'id',
  PROCESS_NAME: 'workflowName',
  FILE_NAME: 'file_name',
  FILE_NAME_BULK_TABLE: 'filename',
  CREATION_TIME: 'creation_time',
  ENDING_TIME: 'execution_time',
  PROCESS_INSTANCE_ID: 'procInstanceId',
  Start_AND_End_Time: 'Start & End Time',
  Upload_Status: 'Upload Status',
  FileDetailsFile_name: 'filename',
  PROCESS_EXECUTION: 'processExecution',
  SCHEDULED: 'scheduled',
  INPROGRESS: 'inprogress',
  BUSINESS_KEY: 'businessKey',
};
